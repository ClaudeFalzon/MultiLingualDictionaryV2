{"version":3,"sources":["components/Word.js","App.js","index.js"],"names":["Word","props","title1","en","speech","error","example","origin","phonetic","it","fr","de","inputRef","useRef","useState","selectLanguage","setSelectLanguage","console","log","meaning","meanings","word","phonetics","audio","onSubmit","e","preventDefault","current","value","trim","getWord","className","ref","type","name","id","placeholder","onChange","target","handleLanguage","onClick","setLanguage","defined","language","loading","Spinner","animation","controls","src","map","currentValue","partOfSpeech","definitions","index","definition","uuidv4","App","setMeaning","setDefined","setLoading","a","fetch","response","json","result","title","useEffect","reactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0eebb4d.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Word.css\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport default function Word(props) {\r\n  const title1 = {\r\n    en: {\r\n      speech: \"Part of Speech: \",\r\n      error: \"No definition available. Please search another word.\",\r\n      example: \" Example: \",\r\n      origin: \"Origin: \",\r\n      phonetic: \"Phonetics: \"\r\n    },\r\n    it: {\r\n      speech: \"Parte del discorso: \",\r\n      error: \"Nessuna definizione è disponibile. Cerca un'altra parola.\",\r\n      example: \" Esempio: \",\r\n      origin: \"Origine: \",\r\n      phonetic: \"Fonetica: \"\r\n    },\r\n    fr: {\r\n      speech: \"Partie du discours: \",\r\n      error: \"Aucune définition disponible. Cherchez un autre mot.\",\r\n      example: \" Example: \",\r\n      origin: \"Origine: \",\r\n      phonetic: \"Phonétique: \"\r\n    },\r\n\r\n    de: {\r\n      speech: \"Wortart: \",\r\n      error: \"Keine Definition verfügbar. Bitte suchen Sie ein neues Wort.\",\r\n      example: \" Beispiel: \",\r\n      origin: \"Wortherkunft: \",\r\n      phonetic: \"Phonetik: \"\r\n    }\r\n  };\r\n\r\n  const inputRef = useRef();\r\n\r\n  const [selectLanguage, setSelectLanguage] = useState(\"fr\");\r\n\r\n  const searchNewWord = (e) => {\r\n    e.preventDefault();\r\n    if (inputRef.current.value.trim() !== \"\") {\r\n      props.getWord(inputRef.current.value);\r\n    }\r\n  };\r\n\r\n  const handleLanguage = (e) => {\r\n    console.log(e.target.value);\r\n    setSelectLanguage(e.target.value);\r\n  };\r\n\r\n  const changeLanguage = (e) => {\r\n   inputRef.current.value!==\"\" && props.setLanguage(selectLanguage);\r\n  };\r\n\r\n  console.log(props.meaning[0].meanings);\r\n  const word = props.meaning[0].word;\r\n  const origin = props.meaning[0].origin;\r\n  const phonetics = props.meaning[0].phonetic;\r\n  const audio = props.meaning[0].phonetics[0].audio;\r\n\r\n  console.log(audio);\r\n  console.log(origin);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <form onSubmit={searchNewWord}>\r\n          {/*   <label>\r\n            Choose a word: */}\r\n          <input\r\n            className=\"form-item\"\r\n            ref={inputRef}\r\n            /* onChange={getData} */\r\n            type=\"text\"\r\n            value={props.word}\r\n            name=\"word\"\r\n            id=\"\"\r\n            placeholder=\"Choose a word \"\r\n          />\r\n\r\n          <select\r\n            className=\"form-item\"\r\n            onChange={(e) => handleLanguage(e)}\r\n            value={selectLanguage}\r\n            name=\"languages\"\r\n            id=\"language-select\"\r\n          >\r\n            <option value=\"fr\">French</option>\r\n            <option value=\"en\">English</option>\r\n            <option value=\"it\">Italian</option>\r\n            <option value=\"de\">German</option>\r\n            \r\n          </select>\r\n\r\n          <input\r\n            className=\"form-item form-item-three\"\r\n            type=\"submit\"\r\n            value=\"Seek & you shall find\"\r\n            onClick={changeLanguage}\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      {!props.defined && (\r\n        <p className=\"error\">{title1[props.language].error}</p>\r\n      )}\r\n      {props.loading && <Spinner className=\"spinner\" animation=\"border\" />}\r\n\r\n      {props.defined && !props.loading && (\r\n        <div>\r\n          <div className=\"intro\">\r\n            <h2>{word}</h2>\r\n            <div>\r\n              <div>\r\n                {origin && (\r\n                  <span className=\"entry\">{title1[props.language].origin}</span>\r\n                )}\r\n                {origin}\r\n              </div>\r\n              <div>\r\n                {phonetics && (\r\n                  <span className=\"entry\">\r\n                    {title1[props.language].phonetic}\r\n                  </span>\r\n                )}{\" \"}\r\n                {phonetics}\r\n              </div>\r\n              <div>\r\n                {audio && (\r\n                  <div className=\"audio\">\r\n                    <p className=\"entry\">Audio:&nbsp;&nbsp; </p>\r\n                    <audio controls src={audio}>\r\n                      Your browser does not support the\r\n                      <code>audio</code> element.\r\n                    </audio>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div>\r\n                {props.meaning[0].meanings.map((currentValue) => {\r\n                  return (\r\n                    <div key={uuidv4()}>\r\n                      <div>\r\n                        <span className=\"entry\">\r\n                          {\" \"}\r\n                          {title1[props.language].speech}\r\n                        </span>\r\n                        {/* {props.language == \"en\" ? \"Part Of Speech:\" : props.language == \"it\" ? \"Parola:\" : \"\"}  */}\r\n                        {currentValue.partOfSpeech}\r\n                      </div>\r\n                      <div>\r\n                        {currentValue.definitions.map((currentValue, index) => {\r\n                          return (\r\n                            <ul key={uuidv4()}>\r\n                              <li>\r\n                                {currentValue.definition}\r\n                                {currentValue.example && (\r\n                                  <span className=\"entry\">\r\n                                    {title1[props.language].example}\r\n                                  </span>\r\n                                )}{\" \"}\r\n                                {currentValue.example}\r\n                                {/*  {currentValue.example &&\r\n                                  `${title1[props.language].example} ${\r\n                                    currentValue.example\r\n                                  }`}  */}\r\n                              </li>\r\n                            </ul>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport Word from \"./components/Word\";\n\nfunction App() {\n  const [meaning, setMeaning] = useState(null);\n  const [language, setLanguage] = useState(\"fr\");\n\n  const [defined, setDefined] = useState(true);\n\n  const [loading, setLoading] = useState(true);\n  /*   const [word, setWord] = useState(\"ben\");  */\n\n  /* const inputRef = useRef(); reference or tag  */\n\n  const getWord = async (word) => {\n    setLoading(true);\n    const response = await fetch(\n      `https://api.dictionaryapi.dev/api/v2/entries/${language}/${word}`\n    );\n\n    const result = await response.json();\n    setLoading(false);\n    console.log(result);\n    if (!result.title) {\n      setMeaning(result);\n      setDefined(true);\n    } else {\n      setDefined(false);\n    }\n  };\n\n  /*   const searchNewWord = (e) => {\n    e.preventDefault();\n    if (inputRef.current.value.trim() !== \"\") {\n      getWord(inputRef.current.value);\n    }\n  }; */\n  console.log(meaning);\n  console.log(typeof meaning);\n\n  useEffect(() => {\n    getWord(\"etre\");\n    // eslint-disable-next-line\n  }, []);\n\n  /* useEffect(() => {\n  effect\n  \n}, [language, meaning]) */\n\n  return (\n    <div className=\"App\">\n      {/*    <Word word={setWord}  onSearhNewWord={searchNewWord}  ref={inputRef}  /> */}\n\n      {/*  {loading && <h3>Loading.... </h3>} */}\n      {\n        /* !loading && */ meaning && (\n          <Word\n            /*  word={word}\n        setWord={setWord} */\n            loading={loading}\n            defined={defined}\n            getWord={getWord}\n            meaning={meaning}\n            setMeaning={setMeaning}\n            language={language}\n            setLanguage={setLanguage} /* word={word} setWord={setWord} */\n          />\n        )\n      }\n\n      {/* <Word onSearhNewWord={searchNewWord} word={v} /> */}\n\n      {/*   {country && <Country country={country} />}   */}\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React from \"react\"\nimport App from \"./App.js\"\nimport reactDOM from \"react-dom\"\n\nreactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}